{"ast":null,"code":"import axios from 'axios';\nconst deleteProduct = async id => {\n  try {\n    await axios.delete(`http://localhost:4000/api/products/${id}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    // Refresh the list after deletion or remove item from state\n    setProducts(products.filter(product => product._id !== id));\n  } catch (error) {\n    console.error('Failed to delete product:', error.response);\n  }\n};","map":{"version":3,"names":["axios","deleteProduct","id","delete","headers","Authorization","localStorage","getItem","setProducts","products","filter","product","_id","error","console","response"],"sources":["/Users/steevenazareth/product-management-app/frontend/src/components/deleteProducts.js"],"sourcesContent":["import axios from 'axios';\n\nconst deleteProduct = async (id) => {\n    try {\n        await axios.delete(`http://localhost:4000/api/products/${id}`, {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n        });\n        // Refresh the list after deletion or remove item from state\n        setProducts(products.filter(product => product._id !== id));\n    } catch (error) {\n        console.error('Failed to delete product:', error.response);\n    }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAG,MAAOC,EAAE,IAAK;EAChC,IAAI;IACA,MAAMF,KAAK,CAACG,MAAM,CAAE,sCAAqCD,EAAG,EAAC,EAAE;MAC3DE,OAAO,EAAE;QACLC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;MAC3D;IACJ,CAAC,CAAC;IACF;IACAC,WAAW,CAACC,QAAQ,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,KAAKV,EAAE,CAAC,CAAC;EAC/D,CAAC,CAAC,OAAOW,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACE,QAAQ,CAAC;EAC9D;AACJ,CAAC"},"metadata":{},"sourceType":"module"}