{"ast":null,"code":"import axios from 'axios';\n\n// Set up a reusable axios instance with a base URL\nconst API = axios.create({\n  baseURL: 'http://localhost:4000/'\n});\n\n// Insert token in headers of every request if present in local storage\nAPI.interceptors.request.use(req => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    req.headers.Authorization = `Bearer ${token}`;\n  }\n  return req;\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","token","localStorage","getItem","headers","Authorization"],"sources":["/Users/steevenazareth/product-management-app/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Set up a reusable axios instance with a base URL\nconst API = axios.create({ baseURL: 'http://localhost:4000/' });\n\n// Insert token in headers of every request if present in local storage\nAPI.interceptors.request.use((req) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    req.headers.Authorization = `Bearer ${token}`;\n  }\n  return req;\n});\n\nexport default API;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAyB,CAAC,CAAC;;AAE/D;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,GAAG,CAACI,OAAO,CAACC,aAAa,GAAI,UAASJ,KAAM,EAAC;EAC/C;EACA,OAAOD,GAAG;AACZ,CAAC,CAAC;AAEF,eAAeN,GAAG"},"metadata":{},"sourceType":"module"}